<baseviews:CommonViewBase x:Class="Dopamine.Views.FullPlayer.Collection.CollectionTracks"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:dc="clr-namespace:Digimezzo.Foundation.WPF.Controls;assembly=Digimezzo.Foundation.WPF"
                          xmlns:corebase="clr-namespace:Dopamine.Core.Base;assembly=Dopamine.Core"
                          xmlns:pc="clr-namespace:Dopamine.Controls"
                          xmlns:baseviews="clr-namespace:Dopamine.Views.Common.Base"
                          xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
                          xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                          prismMvvm:ViewModelLocator.AutoWireViewModel="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel Margin="10,20,10,26">
        <DockPanel DockPanel.Dock="Top" Margin="10,0,10,20">
            <TextBlock Text="{Binding TracksCount}" FontSize="13"
                               Foreground="{DynamicResource Brush_Accent}" DockPanel.Dock="Left"/>
            <Button x:Name="ShuffleAllButton" DockPanel.Dock="Right" FontSize="13" 
                                Style="{StaticResource TransparentButton}" 
                                VerticalContentAlignment="Center" ToolTip="{DynamicResource Language_Shuffle_All}" 
                                Command="{Binding DataContext.ShuffleAllCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="&#xE8B1;" Style="{StaticResource SegoeAssets}" FontSize="16"
                                       Margin="0,1,5,0" Foreground="{DynamicResource Brush_SecondaryText}" />
                    <TextBlock FontSize="13" Text="{DynamicResource Language_Shuffle_All}"
                                       Foreground="{DynamicResource Brush_SecondaryText}"/>
                </StackPanel>
            </Button>
            <TextBlock Text="{DynamicResource Language_Songs}" FontSize="13" Margin="10,0,0,0"
                               Foreground="{DynamicResource Brush_PrimaryText}" />
        </DockPanel>
        <pc:TotalsInformation
            DockPanel.Dock="Bottom"
            Margin="10,20,10,0" 
            Foreground="{DynamicResource Brush_SecondaryText}" 
            FontSize="13"
            TotalDurationInformation="{Binding TotalDurationInformation}"
            TotalSizeInformation="{Binding TotalSizeInformation}"/>
        <pc:DataGridEx 
            x:Name="DataGridTracks" 
            PreviewKeyDown="DataGridTracks_PreviewKeyDown"
            KeyUp="DataGridTracks_KeyUp"
            VirtualizingStackPanel.IsVirtualizing="True" 
            VirtualizingStackPanel.VirtualizationMode="Recycling" 
            Sorting="DataGridTracks_Sorting"
            ItemsSource="{Binding TracksCvs.View, NotifyOnTargetUpdated=True}"
            TargetUpdated="DataGridTracks_TargetUpdated">
            <pc:DataGridEx.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracksCommand}" />
            </pc:DataGridEx.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedTracksCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectedItems}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <pc:DataGridEx.Resources>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
                </Style>
            </pc:DataGridEx.Resources>
            <pc:DataGridEx.Columns>
                <!-- Song -->
                <DataGridTextColumn SortMemberPath="TrackTitle" Width="3*" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding TrackTitle}" Visibility="Visible">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Song}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Playback indicator -->
                <DataGridTemplateColumn Width="40" IsReadOnly="True" Visibility="Visible">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Style="{StaticResource PlaybackIndicator}"
                                   Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToCollapsedConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Foreground="{DynamicResource Brush_Accent}" 
                                   Margin="0,2,0,0" 
                                   VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Rating -->
                <DataGridTemplateColumn SortMemberPath="Rating" MinWidth="70" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).RatingVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Rating}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <pc:RatingButton 
                                VerticalAlignment="Center" 
                                Foreground="{DynamicResource Brush_PrimaryText}"
                                Rating="{Binding Rating, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Love -->
                <DataGridTemplateColumn SortMemberPath="Love" MinWidth="50" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).LoveVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Love}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <pc:LoveButton 
                                Foreground="{DynamicResource Brush_PrimaryText}"
                                SelectedForeground="{DynamicResource Brush_Accent}"
                                VerticalAlignment="Center" 
                                Love="{Binding Love, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Lyrics -->
                <DataGridTemplateColumn SortMemberPath="HasLyrics" MinWidth="30" IsReadOnly="True" Visibility="{Binding (FrameworkElement.DataContext).LyricsVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Margin="0,3,0,0" Text="&#xE720;" Style="{StaticResource SegoeAssets}" FontSize="15"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="0,3,0,0" Text="&#xE73E;" Style="{StaticResource SegoeAssets}" FontSize="15" Visibility="{Binding HasLyrics, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Artist -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortArtistName" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding ArtistName}" Visibility="{Binding (FrameworkElement.DataContext).ArtistVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Artist}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Album (SortAlbumTitle is used to sort by Album, but preserving track number order inside the album) -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortAlbumTitle" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding AlbumTitle}" Visibility="{Binding (FrameworkElement.DataContext).AlbumVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Album}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Genre -->
                <DataGridTextColumn Width="2*" SortMemberPath="Genre" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding Genre}" Visibility="{Binding (FrameworkElement.DataContext).GenreVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Genre}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Time (SortDuration is used to correctly sort by Length, otherwise sorting goes like this: 1:00, 10:00, 2:00, 20:00) -->
                <DataGridTextColumn Width="*" SortMemberPath="SortDuration" CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}" IsReadOnly="True" Binding="{Binding Duration}" Visibility="{Binding (FrameworkElement.DataContext).LengthVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Time}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Plays -->
                <DataGridTextColumn Width="1.5*" SortMemberPath="SortPlayCount" CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}" IsReadOnly="True" Binding="{Binding PlayCount}" Visibility="{Binding (FrameworkElement.DataContext).PlayCountVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Plays}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Skips -->
                <DataGridTextColumn Width="1.5*" SortMemberPath="SortSkipCount" CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}" IsReadOnly="True" Binding="{Binding SkipCount}" Visibility="{Binding (FrameworkElement.DataContext).SkipCountVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Skips}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Last played -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortDateLastPlayed" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding DateLastPlayed}" Visibility="{Binding (FrameworkElement.DataContext).DateLastPlayedVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Last_Played}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!--Date added -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortDateAdded" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding DateAdded}" Visibility="{Binding (FrameworkElement.DataContext).DateAddedVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Date_Added}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!--Date created -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortDateFileCreated" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding DateFileCreated}" Visibility="{Binding (FrameworkElement.DataContext).DateCreatedVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Date_Created}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Album artist -->
                <DataGridTextColumn Width="2*" SortMemberPath="SortAlbumArtist" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding AlbumArtist}" Visibility="{Binding (FrameworkElement.DataContext).AlbumArtistVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Album_Artist}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Track number -->
                <DataGridTextColumn Width="*" SortMemberPath="SortTrackNumber" CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}" IsReadOnly="True" Binding="{Binding FormattedTrackNumber}" Visibility="{Binding (FrameworkElement.DataContext).TrackNumberVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="#"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Year -->
                <DataGridTextColumn Width="1.5*" SortMemberPath="Year" CellStyle="{StaticResource DataGridCellSecondaryWithEllipsis}" IsReadOnly="True" Binding="{Binding Year}" Visibility="{Binding (FrameworkElement.DataContext).YearVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Year}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <!-- Bitrate (SortBitrate is used to sort by Bitrate number, not by the string with "kbps") -->
                <DataGridTextColumn Width="1.5*" SortMemberPath="SortBitrate" CellStyle="{StaticResource DataGridCellPrimaryWithEllipsis}" IsReadOnly="True" Binding="{Binding Bitrate}" Visibility="{Binding (FrameworkElement.DataContext).BitrateVisible,RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource BooleanToCollapsedConverter}}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{DynamicResource Language_Bitrate}"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </pc:DataGridEx.Columns>
        </pc:DataGridEx>
    </DockPanel>
</baseviews:CommonViewBase>
